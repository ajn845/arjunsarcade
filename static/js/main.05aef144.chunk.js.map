{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","cx","card","infected","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CoutryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0EACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,6OCmDpJC,EA9CD,SAAC,GAA0D,IAAD,IAAvDC,KAAQC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACnD,OAAIH,EAIA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAAEE,QAAS,EAAGC,QAAQ,UACjC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWS,IAAGR,IAAOS,KAAMT,IAAOU,UAAWC,GAAI,GAAIC,GAAI,GACjF,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWS,IAAGR,IAAOS,KAAMT,IAAOJ,WAAYe,GAAI,GAAIC,GAAI,GAClF,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,OAEtE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWS,IAAGR,IAAOS,KAAMT,IAAOH,QAASc,GAAI,GAAIC,GAAI,GAC/E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,OAEnE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CAhCT,c,yBCJTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACjBC,EAAeJ,EAEhBE,IACCE,EAAY,UAAMJ,EAAN,sBAAuBE,IAJlB,kBAQ6CG,IAAMC,IAAIF,GARvD,2BAQdnC,KAAOC,EARO,EAQPA,UAAWC,EARJ,EAQIA,UAAWC,EARf,EAQeA,OAAQC,EARvB,EAQuBA,WARvB,kBASd,CAACH,YAAWC,YAAWC,SAAQC,eATjB,kCAYrBkC,QAAQC,IAAR,MAZqB,0DAAH,sDAgBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAEAE,IAAMC,IAAN,UAAaN,EAAb,WAFA,uBAEf/B,EAFe,EAEfA,KAEDyC,EAAgBzC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC3C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eAPE,kBAUfL,GAVe,yFAAH,qDAgBdM,EAAc,uCAAG,8BAAAb,EAAA,+EAEeE,IAAMC,IAAN,UAAaN,EAAb,eAFf,uBAEPiB,EAFO,EAEfhD,KAAQgD,UAFO,kBAGfA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAHpB,gCAMtBX,QAAQC,IAAR,MANsB,yDAAH,qD,yBCoCZW,EArEA,SAAC,GAAqD,IAAD,IAAnDlD,KAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAAS8B,EAAa,EAAbA,QAAa,EAC9BkB,mBAAS,IADqB,mBACzDR,EADyD,KAC9CS,EAD8C,KAEhEC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAKdc,KACF,IAEF,IAAMC,EACFZ,EAAUa,OAEV,kBAAC,IAAD,CACAxD,KAAM,CACFyD,OAAQd,EAAUD,KAAI,qBAAGG,QACzBa,SAAU,CAAC,CACP1D,KAAM2C,EAAUD,KAAI,qBAAGzC,aACvB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GAER,CACE7D,KAAM2C,EAAUD,KAAI,qBAAGvC,UACvBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,oBACjBD,MAAM,OAKT,KAIHE,EACF9D,EAEI,kBAAC,IAAD,CACAD,KAAM,CACFyD,OAAO,CAAC,WAAY,YAAa,UACjCC,SAAS,CAAC,CACNC,MAAM,SACNG,gBAAiB,CAAC,uBACd,sBACA,uBACA9D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAMvB,EAAOuB,UAI3DsC,QAAS,CACLC,OAAO,CAACC,SAAQ,GAChBC,MAAM,CAACD,SAAQ,EAAME,KAAK,oBAAD,OAAqBnC,OAGnD,KAEP,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU8B,EAAWR,I,mCCrCnBc,EAvBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACEnB,mBAAS,IADX,mBACvCoB,EADuC,KACrBC,EADqB,KAW9C,OATAnB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbsC,EADa,SACazB,IADb,6EAAH,qDAIdO,KACF,CAACkB,IAIC,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOrD,SACxE,4BAAQA,MAAM,IAAd,UACC6C,EAAiB7B,KAAI,SAACT,EAAQ+C,GAAT,OAAe,4BAAQC,IAAKD,EAAGtD,MAAOO,GAAUA,SCoBvEiD,E,4MAlCfC,MAAQ,CACJnF,KAAM,GACNiC,QAAS,I,EAWbqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZmD,EADY,OAElB,EAAKC,SAAS,CAACrF,KAAOoF,EAAanD,QAASA,IAF1B,2C,wPARYD,I,OAApBoD,E,OACNE,KAAKD,SAAS,CAACrF,KAAOoF,I,qIAajB,IAAD,EAEoBE,KAAKH,MAAtBnF,EAFH,EAEGA,KAAMiC,EAFT,EAESA,QACf,OACK,yBAAK5B,UAAWC,IAAOC,WACvB,kBAAC,EAAD,CAAOP,KAAMA,IACb,kBAACuF,EAAD,CAAejB,oBAAqBgB,KAAKhB,sBACzC,kBAAC,EAAD,CAAQtE,KAAMA,EAAMiC,QAASA,S,GA3BtBuD,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCLjDhG,EAAOC,QAAU,CAAC,UAAY,yB,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC","file":"static/js/main.05aef144.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2_XgB\",\"card\":\"Cards_card__2f9NP\",\"infected\":\"Cards_infected__27ew3\",\"recovered\":\"Cards_recovered__2xfBI\",\"deaths\":\"Cards_deaths__1IsbW\"};","import React from 'react';\r\nimport { Card, cardContent, Typography, Grid, StylesProvider, CardContent} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ( {data : {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container  spacing={3} justify=\"center\">\r\n                <Grid item component={Card} className={cx(styles.card, styles.infected)} xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} className={cx(styles.card, styles.recovered)} xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} className={cx(styles.card, styles.deaths)} xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\nimport { DialogActions } from '@material-ui/core';\r\nimport { CountryPicker } from '../components';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changableUrl = url;\r\n\r\n    if(country){\r\n        changableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\ntry {\r\n    const {data: {confirmed, recovered, deaths, lastUpdate }} = await axios.get(changableUrl);\r\n    return {confirmed, recovered, deaths, lastUpdate};\r\n   \r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} =  await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData =  data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: { countries }} =  await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length \r\n        ?(\r\n        <Line\r\n        data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n\r\n            },{\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n\r\n            }],\r\n\r\n        }}\r\n        />): null\r\n\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar \r\n            data={{\r\n                labels:['Infected', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor: ['rgba(0, 0,  255, .5)',\r\n                        'rgba(0, 255, 0, .5)',\r\n                        'rgba(255, 0, 0, .5)',],\r\n                        data: [confirmed.value, recovered.value,deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true, text:`Current State in ${country}`}\r\n            }}\r\n            />\r\n        ): null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Charts;\r\n","import React, { useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';   \r\n\r\nconst CoutryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n  \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CoutryPicker;\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport { Cards, Charts, CountryPicker} from './components';\r\nimport { fetchData } from './api';\r\n\r\n\r\nclass App extends React.Component {\r\nstate = {\r\n    data: {},\r\n    country: '',\r\n}\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n\r\n      \r\n        \r\n            \r\n\r\n    }\r\nhandleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({data : fetchedData, country: country});\r\n\r\n    \r\n} \r\n    render(){\r\n\r\n        const {data, country} = this.state;\r\n      return(\r\n           <div className={styles.container}>\r\n           <Cards data={data} />\r\n           <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n           <Charts data={data} country={country} />\r\n          \r\n           </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__dNCm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__AMasW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3ps9I\"};"],"sourceRoot":""}